// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  DRAFT
  PUBLISHED
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  fullName  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course[]
}

model Course {
  id          String        @id @default(cuid())
  title       String
  description String
  authorId    String
  author      User          @relation(fields: [authorId], references: [id])
  status      Status        @default(DRAFT)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Module      Module[]
  TagOnCourse TagOnCourse[]
}

model Module {
  id        String   @id @default(cuid())
  title     String
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Lesson    Lesson[]
}

model Lesson {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     String?
  moduleId    String
  module      Module   @relation(fields: [moduleId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          String        @id @default(cuid())
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  TagOnCourse TagOnCourse[]
}

model TagOnCourse {
  id        String   @id @default(cuid())
  courseId  String
  tagId     String
  course    Course   @relation(fields: [courseId], references: [id])
  tag       Tag      @relation(fields: [tagId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
